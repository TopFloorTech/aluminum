<?php

/**
 * @file
 * Provides a common configuration interface for Aluminum
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function aluminum_vault_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.aluminum_vault':
      return check_markup(file_get_contents(dirname(__FILE__) . "/README.txt"));
  }
}

function aluminum_vault_social_networks() {
  return [
    'facebook' => 'Facebook',
    'twitter' => 'Twitter',
    'linkedin' => 'LinkedIn',
    'youtube' => 'YouTube',
    'google_plus' => 'Google+',
  ];
}

function aluminum_vault_phone_numbers() {
  return [
    'phone_number_toll_free' => [
      'title' => $this->t('Toll-free phone number'),
      'short_title' => 'T',
      'description' => $this->t('If available, set the primary toll-free phone number which will have priority.'),
    ],
    'phone_number' => [
      'title' => $this->t('Phone number'),
      'short_title' => 'P',
      'description' => $this->t('Set the main standard (non-toll-free) phone number.'),
    ],
    'fax_number' => [
      'title' => $this->t('Fax number'),
      'short_title' => 'F',
      'description' => $this->t('If available, set the fax number.'),
    ],
  ];
}

function aluminum_vault_config($group = null) {
  $config_name = 'config.aluminum_vault';

  if (!empty($group)) {
    $config_name .= '.' . $group;
  }

  return Drupal::config($config_name);
}

/**
 * Implements hook_aluminum_vault_groups().
 */
function aluminum_vault_aluminum_vault_groups() {
  $groups = [
    'general' => [
      '#title' => 'General',
      '#weight' => -50,
    ],
    'contact_info' => [
      '#title' => 'Contact info',
      '#weight' => 0,
    ],
  ];

  foreach (aluminum_vault_social_networks() as $id => $name) {
    $groups[$id] = [
      '#title' => $name,
      '#weight' => 10,
    ];
  }

  return $groups;
}

/**
 * Implements hook_aluminum_vault_config().
 */
function aluminum_vault_aluminum_vault_config() {
  $config = [];

  // General config
  $config['base_icon_class'] = [
    '#type' => 'textfield',
    '#title' => $this->t('Base icon class'),
    '#description' => $this->t('This class string will be prepended to any other icon classes that are output.'),
    '#vault_group' => 'general',
  ];

  // Contact info
  foreach (aluminum_vault_phone_numbers() as $id => $info) {
    $config[$id] = [
      '#type' => 'tel',
      '#title' => $info['title'],
      '#description' => $info['description'],
      '#vault_group' => 'contact_info',
    ];
  }

  // Social network settings
  foreach (aluminum_vault_social_networks() as $id => $name) {
    $config[$id . '_icon_class'] = [
      '#type' => 'textfield',
      '#title' => $this->t($name . ' icon class'),
      '#description' => $this->t('This icon class will be used to represent ' . $name . '.'),
      '#vault_group' => $id,
    ];

    $config[$id . '_page_url'] = [
      '#type' => 'textfield',
      '#title' => $this->t($name . ' page URL'),
      '#description' => $this->t('The URL used when linking to this site\'s ' . $name . ' page.'),
      '#vault_group' => $id,
    ];
  }

  return $config;
}
